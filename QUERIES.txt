/* Query 1 */
SELECT
  al.Title AS Album_Name,
  COUNT(al.Title) AS Album_Sold
FROM Artist a
JOIN Album al
  ON a.ArtistId = al.ArtistId
JOIN Track t
  ON t.AlbumId = al.AlbumId
JOIN InvoiceLine il
  ON il.TrackId = t.TrackId
JOIN Invoice i
  ON i.InvoiceId = il.InvoiceId
  WHERE STRFTIME('%Y', i.InvoiceDate) = '2010'
GROUP BY 1
ORDER BY 2 DESC
LIMIT 20;


/* Query 2 */
WITH t1
AS (SELECT
  i.InvoiceId AS Invoice_ID,
  CASE
    WHEN i.total > 20 OR
      COUNT(il.quantity) > 14 THEN 'Large order'
    WHEN i.total BETWEEN 20 AND 10 OR
      COUNT(il.quantity) BETWEEN 9 AND 14 THEN 'Medium order'
    WHEN i.total < 10 OR
      COUNT(il.quantity) < 9 THEN 'Small order'
  END AS Size_of_Order
FROM InvoiceLine il
JOIN Invoice i
  ON il.InvoiceId = i.InvoiceId
GROUP BY 1)

SELECT
  Size_of_Order,
  COUNT(Size_of_Order) AS Number_of_Order
FROM t1
GROUP BY 1
ORDER BY 2 DESC;

/* Query 3 */
WITH t1
AS (SELECT
  e.FirstName,
  SUM(i.total) AS Sales_Amount
FROM Employee e
JOIN Customer c
  ON e.EmployeeId = c.SupportRepId
JOIN invoice i
  ON i.CustomerId = c.CustomerId
GROUP BY 1),

t2
AS (SELECT
  FirstName,
  SUM(Sales_amount) AS Total_Sales
FROM t1
GROUP BY FirstName)

SELECT
  t1.FirstName,
  t2.Total_Sales
FROM t1
JOIN t2
  ON t1.FirstName = t2.FirstName

/* Query 4 */
SELECT
  strftime('%Y', i.InvoiceDate) AS Year,
  g.name AS Genre_Name,
  COUNT(g.Name) AS Popularity
FROM Genre g
JOIN Track t
  ON g.GenreId = t.GenreId
JOIN InvoiceLine il
  ON il.TrackId = t.TrackId
JOIN Invoice i
  ON i.InvoiceId = il.InvoiceId
GROUP BY 1,
         2
ORDER BY 3 DESC
